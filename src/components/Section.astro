---
interface Props {
  type?: 'full' | 'schedule' | 'services' | 'bordered' | 'grid';
  id?: string;
  class?: string;
}

const { type, id, class: className } = Astro.props;

---

<section
  id={id}
  class:list={[
    'content-section',
    { [`section-${type}`]: type },
    className
  ]}>
  <div class="section-content">
    <slot />
  </div>
</section>

<style>
  .content-section {
    width: 100%;
    max-width: var(--max-width-5xl);
    margin: 0 auto;
    padding: var(--space-4);
  }

  .section-content {
    width: 100%;
  }

  /* Typography styles */
  .section-content :global(h2) {
    color: var(--color-primary);
    font-size: var(--text-3xl);
    font-weight: 600;
    line-height: 1.2;
  }

  .section-content :global(h3) {
    color: var(--color-primary);
    font-size: var(--text-2xl);
    font-weight: 500;
    margin: var(--space-6) 0 var(--space-4);
    line-height: 1.4;
  }

  .section-content :global(p) {
    color: var(--color-text);
    margin-bottom: var(--space-4);
    line-height: 1.8;
  }

  /* List styles */
  .section-content :global(ul),
  .section-content :global(ol) {
    margin: var(--space-6) 0;
    padding-left: var(--space-8);
    list-style-position: outside;
  }

  .section-content :global(li) {
    color: var(--color-text);
    line-height: 1.6;
    padding: var(--space-1) 0;
  }

  .section-content :global(ul li::marker) {
    color: var(--color-primary-light);
  }

  .section-content :global(ol) {
    list-style: none;
  }

  .section-content :global(ol li) {
    position: relative;
    padding-left: 0;
  }

  /* Section type styles */
  .section-grid .section-content {
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--space-6);
  }

  .section-grid .section-content :global(ol) {
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--space-8);
    padding: 0;
    list-style-position: inside;
  }

  .section-grid .section-content :global(ol > li) {
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    padding: var(--space-6);
    box-shadow: var(--shadow-sm);
    transition: box-shadow var(--transition-normal), border-color var(--transition-normal);
  }

  .section-grid .section-content :global(ol > li:hover) {
    box-shadow: var(--shadow-md);
    border-color: var(--color-primary);
  }



  .section-services .section-content {
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--space-6);
    width: 100%;
  }

  .section-services :global(h2) {
    grid-column: 1 / -1;
  }
  
  .section-services :global(.service-card) {
    width: 100%;
    height: 100%;
  }

  .section-schedule .section-content {
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--space-6);
    width: 100%;
  }

  .section-schedule .section-content :global(h2) {
    grid-column: 1 / -1;
  }

  .section-schedule .section-content :global(.schedule-section) {
    width: 100%;
    height: 100%;
  }

  .section-bordered {
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    padding: var(--space-8);
    box-shadow: var(--shadow-sm);
    width: 100%;
    transition: box-shadow var(--transition-normal), border-color var(--transition-normal);
  }

  .section-bordered:hover {
    border-color: var(--color-primary);
    box-shadow: var(--shadow-md);
  }

  /* Responsive styles */
  @media (min-width: 768px) {
    .content-section {
      padding: var(--space-6);
    }

    .section-services .section-content {
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--space-8);
  }

  .section-services :global(.service-card) {
    grid-row-start: 2;
  }

  .section-schedule .section-content {
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: var(--space-8);
  }
  .section-grid .section-content :global(ol) {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  }
}

</style>
