---
interface Props {
  values: Array<{
    title: string;
    description: string;
  }>;
  title?: string;
  className?: string;
}

const { values, title = "Our Values", className = "" } = Astro.props;
---

<section
  class:list={["values-section", className]}
  aria-labelledby="values-title"
>
  <div class="content-container">
    <h2 id="values-title" class="section-title">{title}</h2>
    <ul class="values-grid">
      {
        values.map(({ title, description }) => (
          <li class="value-card">
            <button class="value-button" type="button">
              <h3 class="value-title">{title}</h3>
              <p class="value-description">{description}</p>
            </button>
          </li>
        ))
      }
    </ul>
  </div>
</section>

<style>
  .values-section {
    margin: var(--space-8) 0;
  }

  .content-container {
    max-width: var(--max-width-7xl);
    margin: 0 auto;
    padding: 0 var(--space-4);
    width: 100%;
  }

  .section-title {
    color: var(--color-primary);
    font-size: var(--text-3xl);
    text-align: center;
    margin-bottom: var(--space-8);
  }

  .values-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(min(350px, 100%), 1fr));
    gap: var(--space-6);
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .value-button {
    width: 100%;
    height: 100%;
    padding: var(--space-6);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-md);
    background-color: var(--color-surface);
    box-shadow: var(--shadow-md);
    cursor: pointer;
    text-align: left;
    transition:
      transform var(--transition-normal),
      box-shadow var(--transition-normal),
      border-color var(--transition-normal);
  }

  /* Enhance interactivity for both hover and keyboard focus */
  .value-button:hover,
  .value-button:focus-visible {
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
    border-color: var(--color-primary-light);
    outline: none;
  }

  .value-title {
    font-family: var(--font-heading);
    font-size: var(--text-xl);
    color: var(--color-text);
    margin-bottom: var(--space-4);
  }

  .value-description {
    font-size: var(--text-base);
    line-height: 1.6;
    color: var(--color-text-light);
  }

  /* Respect user's motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .value-button {
      transition: none;
    }

    .value-button:hover,
    .value-button:focus-visible {
      transform: none;
    }
  }

  /* Mobile-first responsive adjustments */
  @media (max-width: 768px) {
    .values-section {
      padding: var(--space-4);
    }

    .values-grid {
      gap: var(--space-4);
    }

    .value-button {
      padding: var(--space-4);
    }

    .value-title {
      font-size: var(--text-lg);
    }
  }
</style>
