---
import BaseLayout from "../../components/layout/BaseLayout.astro";
import Header from "../../components/layout/Header.astro";
import Footer from "../../components/layout/Footer.astro";
import Hero from "../../components/ui/Hero.astro";
import CallToAction from "../../components/ui/CallToAction.astro";
import { programs } from "../../data/programs";
import { getCollection, type CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const programEntries = await getCollection('programs');
  return programs.map((program) => {
    const mdxEntry = programEntries.find((entry: CollectionEntry<'programs'>) => entry.slug === program.slug);
    if (!mdxEntry) {
      throw new Error(`No MDX content found for program: ${program.slug}`);
    }
    return {
      params: { slug: program.slug },
      props: { program, entry: mdxEntry },
    };
  });
}

interface Props {
  program: (typeof programs)[number];
  entry: CollectionEntry<'programs'>;
}

const { program, entry } = Astro.props;
const { Content } = await entry.render();
---

<BaseLayout title={program.title}>
  <Header />
  <div class="program-page">
    <Hero
      title={program.title}
      backgroundImage={program.image}
    />
    <article class="program-content">
      <h2 id="program-title">About {program.title}</h2>
      <div class="content-wrapper">
        {Content && <Content />}
      </div>
    </article>

    <section class="program-cta">
      <h2 id="cta-heading" class="sr-only">Get Involved</h2>
      <CallToAction
        title="Interested in this program?"
        description="Contact us to learn more about how you can participate or support this initiative."
        primaryCta={{
          text: "Contact Us",
          href: `/contact#contact-form?subject=programs`,
          srText: `Contact us about ${program.title}`,
        }}
      />
    </section>
  </div>

  <Footer />
</BaseLayout>

<style>
  /* Screen reader only utility class */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  /* Mobile-first layout styles */
  .program-page {
    min-height: 100vh;
    background-color: var(--color-background);
  }

  #program-title {
    font-size: var(--text-4xl);
    font-weight: 700;
    text-align: center;
    color: var(--color-primary);
    margin-bottom: var(--space-4);
  }

  .program-content {
    width: 100%;
    max-width: var(--max-width-3xl);
    margin: 0 auto;
    padding: 0 var(--space-4);
    margin-top: var(--space-12);
    padding: 0 var(--space-4);
    margin-top: var(--space-12);
    position: relative;
  }

  .content-wrapper {
    width: 100%;
  }

  /* Focus styles for keyboard navigation */
  .content-wrapper :global(a:focus),
  .content-wrapper :global(button:focus) {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }

  /* Tablet and desktop styles */
  @media (min-width: 768px) {
    .program-page {
      gap: var(--space-12);
    }

    .program-content {
      padding: var(--space-8) var(--space-8);
      max-width: var(--max-width-7xl);
    }

    .content-wrapper :global(section) {
      padding: var(--space-8);
    }

    .content-wrapper :global(.service-card) {
      padding: var(--space-8);
    }

    .content-wrapper :global(h2) {
      font-size: var(--text-3xl);
    }

    .content-wrapper :global(h3) {
      font-size: var(--text-2xl);
    }
  }
</style>
